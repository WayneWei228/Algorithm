vector:
全都是push_back的话无越界这一说，只有值为0。
vector<int> vi;

int main() {
	vi.push_back(1);
	vi.push_back(2);
	vi.push_back(3);
	cout << vi[3] << endl;
}
************************************************************************************
快读：
int read() {
int w = 1, q = 0;
char ch = ' ';
while(ch != '-' && (ch < '0' || ch > '9')) ch = getchar();
if(ch == '-') w = -1, ch = getchar();
while(ch >= '0' && ch <= '9') q = q * 10 + ch - '0', ch = getchar();
return w * q;
}
************************************************************************************
#include <bits/stdc++.h>
using namespace std;

struct node {
    
};

int* p = new int; //  delete(p)
node* q = new node; // 分配地址

int* w = (int*)malloc(sizeof(int));    // free(w);
node* t = (node*)malloc(sizeof(node));

int main() {
    int a = 1;
    int& b = a;
    int& c = b;
    int& d = a;
    a = a + 1;
    cout << "a " << a << " b " << b << " c " << c << endl;
	// a 2 b 2 c 2
    return 0;
}

************************************************************************************
4、可以建立指针变量的引用如

int i=5;

&取地址符号
*地址所对应的值

int *p=&i;

int * &pt=p;//建立指针变量p的引用pt

引用变量pt代表一个int *类型的数据对象(即指针变量)

5、可以用const对引用加以限定，不允许直接改变该引用的值，但是可以改变原

变量的值去改变引用的值；

int i=5;

const int &a=i;

a=3;//错误，因为引用a是const int 类型不能直接改变引用的值

但是可以这样修改：

i=3;

此时输出i和a都是3

************************************************************************************

upper_bound ->  >
lower_bound ->  >=